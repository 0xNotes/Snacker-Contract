{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "snacker",
      "outputs": [
        {
          "internalType": "contract Snacker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMinterA",
      "outputs": [
        {
          "internalType": "contract TestMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMinterB",
      "outputs": [
        {
          "internalType": "contract TestMinter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testNftInitialization",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSnack",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526007805460ff191660011790556200001b62000058565b600855601180546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d1790553480156200005157600080fd5b5062001270565b6040805160a08101825260056060820181815264105b9d9a5b60da1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a3835343500000000000000000000009181019190915282840152915164185b9d9a5b60da1b81526000926009910190815260405190819003602001902081518190620000f1908262000f1e565b50602082015160018201556040820151600282019062000112908262000f1e565b50506040805160a0810182526007606082018181526612185c991a185d60ca1b60808401528252617a6960208084019190915283518085018552601581527f687474703a2f2f3132372e302e302e313a38353435000000000000000000000091810191909152828401529151661a185c991a185d60ca1b81529092506009910190815260405190819003602001902081518190620001b1908262000f1e565b506020820151600182015560408201516002820190620001d2908262000f1e565b5090505060405180606001604052806040518060400160405280600781526020016613585a5b9b995d60ca1b8152508152602001600181526020016040518060600160405280603d815260200162003ed6603d91399052604051661b585a5b9b995d60ca1b8152600990600701908152604051908190036020019020815181906200025e908262000f1e565b5060208201516001820155604082015160028201906200027f908262000f1e565b50905050604051806060016040528060405180604001604052806006815260200165476f65726c6960d01b8152508152602001600581526020016040518060600160405280603c815260200162003f13603c9139905260405165676f65726c6960d01b81526009906006019081526040519081900360200190208151819062000309908262000f1e565b5060208201516001820155604082015160028201906200032a908262000f1e565b50506040805160a081018252600760608201818152665365706f6c696160c81b6080840152825262aa36a760208084019190915283518085018552601781527f68747470733a2f2f7270632e7365706f6c69612e64657600000000000000000091810191909152828401529151667365706f6c696160c81b81529092506009910190815260405190819003602001902081518190620003ca908262000f1e565b506020820151600182015560408201516002820190620003eb908262000f1e565b50506040805160a081018252600860608201818152674f7074696d69736d60c01b60808401528252600a60208084019190915283518085018552601b81527f68747470733a2f2f6d61696e6e65742e6f7074696d69736d2e696f000000000091810191909152828401529151676f7074696d69736d60c01b815290925060099101908152604051908190036020019020815181906200048b908262000f1e565b506020820151600182015560408201516002820190620004ac908262000f1e565b50506040805160a081018252600f606082018181526e4f7074696d69736d20476f65726c6960881b608084015282526101a460208084019190915283518085018552601a81527f68747470733a2f2f676f65726c692e6f7074696d69736d2e696f000000000000918101919091528284015291516e6f7074696d69736d5f676f65726c6960881b815290925060099101908152604051908190036020019020815181906200055b908262000f1e565b5060208201516001820155604082015160028201906200057c908262000f1e565b50506040805160a081018252600c606082018181526b417262697472756d204f6e6560a01b6080840152825261a4b160208084019190915283518085018552601c81527f68747470733a2f2f617262312e617262697472756d2e696f2f72706300000000918101919091528284015291516b617262697472756d5f6f6e6560a01b8152909250600991019081526040519081900360200190208151819062000625908262000f1e565b50602082015160018201556040820151600282019062000646908262000f1e565b5090505060405180606001604052806040518060400160405280601381526020017f417262697472756d204f6e6520476f65726c6900000000000000000000000000815250815260200162066eed815260200160405180606001604052806025815260200162003f4f6025913990526040517f617262697472756d5f6f6e655f676f65726c690000000000000000000000000081526009906013019081526040519081900360200190208151819062000700908262000f1e565b50602082015160018201556040820151600282019062000721908262000f1e565b50506040805160a081018252600d606082018181526c417262697472756d204e6f766160981b6080840152825261a4ba60208084019190915283518085018552601c81527f68747470733a2f2f6e6f76612e617262697472756d2e696f2f72706300000000918101919091528284015291516c617262697472756d5f6e6f766160981b81529092506009910190815260405190819003602001902081518190620007cc908262000f1e565b506020820151600182015560408201516002820190620007ed908262000f1e565b50506040805160a081018252600760608201818152662837b63cb3b7b760c91b60808401528252608960208084019190915283518085018552601781527f68747470733a2f2f706f6c79676f6e2d7270632e636f6d00000000000000000091810191909152828401529151663837b63cb3b7b760c91b815290925060099101908152604051908190036020019020815181906200088b908262000f1e565b506020820151600182015560408201516002820190620008ac908262000f1e565b50506040805160a081018252600e606082018181526d506f6c79676f6e204d756d62616960901b608084015282526201388160208084019190915283518085018552601e81527f68747470733a2f2f7270632d6d756d6261692e6d617469632e746f6461790000918101919091528284015291516d706f6c79676f6e5f6d756d62616960901b815290925060099101908152604051908190036020019020815181906200095a908262000f1e565b5060208201516001820155604082015160028201906200097b908262000f1e565b509050506040518060600160405280604051806040016040528060098152602001684176616c616e63686560b81b815250815260200161a86a815260200160405180606001604052806025815260200162003eb1602591399052604051686176616c616e63686560b81b815260099081019081526040519081900360200190208151819062000a0b908262000f1e565b50602082015160018201556040820151600282019062000a2c908262000f1e565b5090505060405180606001604052806040518060400160405280600e81526020016d4176616c616e6368652046756a6960901b815250815260200161a86981526020016040518060600160405280602a815260200162003f74602a913990526040516d6176616c616e6368655f66756a6960901b8152600990600e019081526040519081900360200190208151819062000ac7908262000f1e565b50602082015160018201556040820151600282019062000ae8908262000f1e565b5090505060405180606001604052806040518060400160405280600f81526020016e2127211029b6b0b93a1021b430b4b760891b81525081526020016038815260200160405180606001604052806021815260200162003f9e6021913990526040516e3137312fb9b6b0b93a2fb1b430b4b760891b8152600990600f019081526040519081900360200190208151819062000b84908262000f1e565b50602082015160018201556040820151600282019062000ba5908262000f1e565b5090505060405180606001604052806040518060400160405280601781526020017f424e4220536d61727420436861696e20546573746e65740000000000000000008152508152602001606181526020016040518060600160405280602e815260200162003e83602e913990526040517f626e625f736d6172745f636861696e5f746573746e657400000000000000000081526009906017019081526040519081900360200190208151819062000c5d908262000f1e565b50602082015160018201556040820151600282019062000c7e908262000f1e565b50506040805160a081018252600c606082018181526b23b737b9b4b99021b430b4b760a11b60808401528252606460208084019190915283518085018552601b81527f68747470733a2f2f7270632e676e6f736973636861696e2e636f6d0000000000918101919091528284015291516b33b737b9b4b9afb1b430b4b760a11b8152909250600991019081526040519081900360200190208151819062000d26908262000f1e565b50602082015160018201556040820151600282019062000d47908262000f1e565b5090505060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316639d2ad72a6040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000daf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000dd99190810190620010e2565b905060005b815181101562000e705781818151811062000dfd5762000dfd62001214565b602002602001015160200151600983838151811062000e205762000e2062001214565b60200260200101516000015160405162000e3b91906200122a565b9081526020016040518091039020600201908162000e5a919062000f1e565b508062000e678162001248565b91505062000dde565b50600091505090565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168062000ea457607f821691505b60208210810362000ec557634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000f1957600081815260208120601f850160051c8101602086101562000ef45750805b601f850160051c820191505b8181101562000f155782815560010162000f00565b5050505b505050565b81516001600160401b0381111562000f3a5762000f3a62000e79565b62000f528162000f4b845462000e8f565b8462000ecb565b602080601f83116001811462000f8a576000841562000f715750858301515b600019600386901b1c1916600185901b17855562000f15565b600085815260208120601f198616915b8281101562000fbb5788860151825594840194600190910190840162000f9a565b508582101562000fda5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604080519081016001600160401b03811182821017156200100f576200100f62000e79565b60405290565b604051601f8201601f191681016001600160401b038111828210171562001040576200104062000e79565b604052919050565b60005b83811015620010655781810151838201526020016200104b565b50506000910152565b600082601f8301126200108057600080fd5b81516001600160401b038111156200109c576200109c62000e79565b620010b1601f8201601f191660200162001015565b818152846020838601011115620010c757600080fd5b620010da82602083016020870162001048565b949350505050565b60006020808385031215620010f657600080fd5b82516001600160401b03808211156200110e57600080fd5b818501915085601f8301126200112357600080fd5b81518181111562001138576200113862000e79565b8060051b6200114985820162001015565b91825283810185019185810190898411156200116457600080fd5b86860192505b838310156200120757825185811115620011845760008081fd5b86016040818c03601f19018113156200119d5760008081fd5b620011a762000fea565b8983015188811115620011ba5760008081fd5b620011ca8e8c838701016200106e565b825250908201519087821115620011e15760008081fd5b620011f18d8b848601016200106e565b818b01528452505091860191908601906200116a565b9998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082516200123e81846020870162001048565b9190910192915050565b6000600182016200126957634e487b7160e01b600052601160045260246000fd5b5060010190565b612c0380620012806000396000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c8063ba414fa61162000062578063ba414fa614620000e9578063c482ef901462000104578063dbbfea1d1462000118578063fa7626d4146200012c57600080fd5b80630a9254e414620000985780633338f61d14620000a4578063464c8dac14620000ae5780638c0c5e3f14620000df575b600080fd5b620000a26200013a565b005b620000a262000487565b601354620000c2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620000a26200053a565b620000f36200096b565b6040519015158152602001620000d6565b601254620000c2906001600160a01b031681565b601454620000c2906001600160a01b031681565b600754620000f39060ff1681565b604051620001489062000ce4565b604051809103906000f08015801562000165573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b0392909216919091179055604051620001949062000cf2565b604051809103906000f080158015620001b1573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055604051620001e09062000cf2565b604051809103906000f080158015620001fd573d6000803e3d6000fd5b50601480546001600160a01b0319166001600160a01b0392831617905560115460405163ca669fa760e01b81526001600482015291169063ca669fa790602401600060405180830381600087803b1580156200025857600080fd5b505af11580156200026d573d6000803e3d6000fd5b505060115460405163c88a5e6d60e01b815260016004820152671bc16d674ec8000060248201526001600160a01b03909116925063c88a5e6d9150604401600060405180830381600087803b158015620002c657600080fd5b505af1158015620002db573d6000803e3d6000fd5b50506013546040516354ba0f2760e01b8152600160048201526001600160a01b0390911692506354ba0f2791506024016020604051808303816000875af11580156200032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000351919062000d00565b506014546040516354ba0f2760e01b8152600160048201526001600160a01b03909116906354ba0f27906024016020604051808303816000875af11580156200039e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c4919062000d00565b506012546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a16013546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a16014546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a1565b6013546040516370a0823160e01b81526001600482015262000503916001600160a01b0316906370a08231906024015b602060405180830381865afa158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb919062000d00565b600162000aa2565b6014546040516370a0823160e01b81526001600482015262000538916001600160a01b0316906370a0823190602401620004b7565b565b60115460405163ca669fa760e01b8152600160048201526001600160a01b039091169063ca669fa790602401600060405180830381600087803b1580156200058157600080fd5b505af115801562000596573d6000803e3d6000fd5b505060135460125460405163095ea7b360e01b81526001600160a01b039182166004820152600160248201529116925063095ea7b39150604401600060405180830381600087803b158015620005eb57600080fd5b505af115801562000600573d6000803e3d6000fd5b505060115460405163ca669fa760e01b8152600160048201526001600160a01b03909116925063ca669fa79150602401600060405180830381600087803b1580156200064b57600080fd5b505af115801562000660573d6000803e3d6000fd5b505060145460125460405163095ea7b360e01b81526001600160a01b039182166004820152600160248201529116925063095ea7b39150604401600060405180830381600087803b158015620006b557600080fd5b505af1158015620006ca573d6000803e3d6000fd5b505060115460405163ca669fa760e01b8152600160048201526001600160a01b03909116925063ca669fa79150602401600060405180830381600087803b1580156200071557600080fd5b505af11580156200072a573d6000803e3d6000fd5b5050601254601354601454604051631f48a98760e11b81526001600160a01b0392831660048201526001602482018190529183166044820152606481019190915291169250633e91530e9150608401600060405180830381600087803b1580156200079457600080fd5b505af1158015620007a9573d6000803e3d6000fd5b50506013546040516370a0823160e01b8152600160048201526200082b93506001600160a01b0390911691506370a08231906024015b602060405180830381865afa158015620007fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000823919062000d00565b600062000aa2565b6014546040516370a0823160e01b81526001600482015262000860916001600160a01b0316906370a0823190602401620007df565b6013546012546040805163044df8e760e41b815290516200090f936001600160a01b03908116936370a08231939116916344df8e70916004808201926020929091908290030181865afa158015620008bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e2919062000d1a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401620004b7565b6014546012546040805163044df8e760e41b8152905162000538936001600160a01b03908116936370a08231939116916344df8e70916004808201926020929091908290030181865afa158015620008bc573d6000803e3d6000fd5b600754600090610100900460ff16156200098e5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000a9d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000a1f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000d7e565b60408051601f198184030181529082905262000a3b9162000da4565b6000604051808303816000865af19150503d806000811462000a7a576040519150601f19603f3d011682016040523d82523d6000602084013e62000a7f565b606091505b509150508080602001905181019062000a99919062000db2565b9150505b919050565b80821462000bcd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000b159060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000bcd62000bd1565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000cd35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000c6e929160200162000d7e565b60408051601f198184030181529082905262000c8a9162000da4565b6000604051808303816000865af19150503d806000811462000cc9576040519150601f19603f3d011682016040523d82523d6000602084013e62000cce565b606091505b505050505b6007805461ff001916610100179055565b6102278062000dd783390190565b611bd08062000ffe83390190565b60006020828403121562000d1357600080fd5b5051919050565b60006020828403121562000d2d57600080fd5b81516001600160a01b038116811462000d4557600080fd5b9392505050565b6000815160005b8181101562000d6f576020818501810151868301520162000d53565b50600093019283525090919050565b6001600160e01b031983168152600062000d9c600483018462000d4c565b949350505050565b600062000d45828462000d4c565b60006020828403121562000dc557600080fd5b8151801515811462000d4557600080fdfe6080604052600080546001600160a01b03191661dead17905534801561002457600080fd5b506101f3806100346000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633e91530e1461003b57806344df8e7014610050575b600080fd5b61004e610049366004610179565b61007f565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546040516323b872dd60e01b81523360048201526001600160a01b03918216602482015260448101859052908516906323b872dd90606401600060405180830381600087803b1580156100d357600080fd5b505af11580156100e7573d6000803e3d6000fd5b50506000546040516323b872dd60e01b81523360048201526001600160a01b0391821660248201526044810185905290851692506323b872dd9150606401600060405180830381600087803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b5050505050505050565b80356001600160a01b038116811461017457600080fd5b919050565b6000806000806080858703121561018f57600080fd5b6101988561015d565b9350602085013592506101ad6040860161015d565b939692955092936060013592505056fea2646970667358221220df9061db1a3bc4c875e5f57076a55ce2e0963d9b06ea9f4d62db984883acc66064736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600781526020016611dd5b58985b1b60ca1b8152506040518060400160405280600481526020016323aaa6a160e11b81525081600090816200006091906200018d565b5060016200006f82826200018d565b5050506200008c620000866200009260201b60201c565b62000096565b62000259565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011357607f821691505b6020821081036200013457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018857600081815260208120601f850160051c81016020861015620001635750805b601f850160051c820191505b8181101562000184578281556001016200016f565b5050505b505050565b81516001600160401b03811115620001a957620001a9620000e8565b620001c181620001ba8454620000fe565b846200013a565b602080601f831160018114620001f95760008415620001e05750858301515b600019600386901b1c1916600185901b17855562000184565b600085815260208120601f198616915b828110156200022a5788860151825594840194600190910190840162000209565b5085821015620002495787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61196780620002696000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610239578063b88d4fde1461024c578063c87b56dd1461025f578063e985e9c514610272578063f2fde38b1461028557600080fd5b806370a0823114610205578063715018a6146102185780638da5cb5b1461022057806395d89b411461023157600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab5780634c8baca9146101be57806354ba0f27146101d15780636352211e146101f257600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e6101293660046112b2565b610298565b60405190151581526020015b60405180910390f35b61014b6102ea565b60405161013a919061131f565b61016b610166366004611332565b61037c565b6040516001600160a01b03909116815260200161013a565b610196610191366004611367565b6103a3565b005b6101966101a6366004611391565b6104bd565b6101966101b9366004611391565b6104ee565b6101966101cc366004611414565b610509565b6101e46101df3660046114c7565b610568565b60405190815260200161013a565b61016b610200366004611332565b6105b8565b6101e46102133660046114c7565b610618565b61019661069e565b6007546001600160a01b031661016b565b61014b6106b2565b6101966102473660046114e2565b6106c1565b61019661025a36600461151e565b6106d0565b61014b61026d366004611332565b610708565b61012e6102803660046115de565b610818565b6101966102933660046114c7565b610846565b60006001600160e01b031982166380ac58cd60e01b14806102c957506001600160e01b03198216635b5e139f60e01b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f990611611565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611611565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b6000610387826108bf565b506000908152600460205260409020546001600160a01b031690565b60006103ae826105b8565b9050806001600160a01b0316836001600160a01b0316036104205760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043c575061043c8133610818565b6104ae5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610417565b6104b8838361091e565b505050565b6104c7338261098c565b6104e35760405162461bcd60e51b81526004016104179061164b565b6104b88383836109ea565b6104b8838383604051806020016040528060008152506106d0565b60005b82518110156104b85760005b828110156105555761054284838151811061053557610535611698565b6020026020010151610568565b508061054d816116c4565b915050610518565b5080610560816116c4565b91505061050c565b6000610578600880546001019055565b600061058360085490565b905061058f8382610b5b565b6102e481604051806040016040528060078152602001667465737455726960c81b815250610cf4565b6000818152600260205260408120546001600160a01b0316806102e45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610417565b60006001600160a01b0382166106825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610417565b506001600160a01b031660009081526003602052604090205490565b6106a6610d87565b6106b06000610de1565b565b6060600180546102f990611611565b6106cc338383610e33565b5050565b6106da338361098c565b6106f65760405162461bcd60e51b81526004016104179061164b565b61070284848484610f01565b50505050565b6060610713826108bf565b6000828152600660205260408120805461072c90611611565b80601f016020809104026020016040519081016040528092919081815260200182805461075890611611565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050905060006107c360408051602081019091526000815290565b905080516000036107d5575092915050565b8151156108075780826040516020016107ef9291906116dd565b60405160208183030381529060405292505050919050565b61081084610f34565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61084e610d87565b6001600160a01b0381166108b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610417565b6108bc81610de1565b50565b6000818152600260205260409020546001600160a01b03166108bc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610417565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610953826105b8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610998836105b8565b9050806001600160a01b0316846001600160a01b031614806109bf57506109bf8185610818565b806108105750836001600160a01b03166109d88461037c565b6001600160a01b031614949350505050565b826001600160a01b03166109fd826105b8565b6001600160a01b031614610a235760405162461bcd60e51b81526004016104179061170c565b6001600160a01b038216610a855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610417565b610a928383836001610fa8565b826001600160a01b0316610aa5826105b8565b6001600160a01b031614610acb5760405162461bcd60e51b81526004016104179061170c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610bb15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610417565b6000818152600260205260409020546001600160a01b031615610c165760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610417565b610c24600083836001610fa8565b6000818152600260205260409020546001600160a01b031615610c895760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610417565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610d6f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610417565b60008281526006602052604090206104b8828261179f565b6007546001600160a01b031633146106b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610417565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e945760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610417565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f0c8484846109ea565b610f1884848484611030565b6107025760405162461bcd60e51b81526004016104179061185f565b6060610f3f826108bf565b6000610f5660408051602081019091526000815290565b90506000815111610f765760405180602001604052806000815250610fa1565b80610f8084611131565b604051602001610f919291906116dd565b6040516020818303038152906040525b9392505050565b6001811115610702576001600160a01b03841615610fee576001600160a01b03841660009081526003602052604081208054839290610fe89084906118b1565b90915550505b6001600160a01b03831615610702576001600160a01b038316600090815260036020526040812080548392906110259084906118c4565b909155505050505050565b60006001600160a01b0384163b1561112657604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110749033908990889088906004016118d7565b6020604051808303816000875af19250505080156110af575060408051601f3d908101601f191682019092526110ac91810190611914565b60015b61110c573d8080156110dd576040519150601f19603f3d011682016040523d82523d6000602084013e6110e2565b606091505b5080516000036111045760405162461bcd60e51b81526004016104179061185f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610810565b506001949350505050565b6060600061113e836111c4565b600101905060008167ffffffffffffffff81111561115e5761115e6113cd565b6040519080825280601f01601f191660200182016040528015611188576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461119257509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112035772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061122f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061124d57662386f26fc10000830492506010015b6305f5e1008310611265576305f5e100830492506008015b612710831061127957612710830492506004015b6064831061128b576064830492506002015b600a83106102e45760010192915050565b6001600160e01b0319811681146108bc57600080fd5b6000602082840312156112c457600080fd5b8135610fa18161129c565b60005b838110156112ea5781810151838201526020016112d2565b50506000910152565b6000815180845261130b8160208601602086016112cf565b601f01601f19169290920160200192915050565b602081526000610fa160208301846112f3565b60006020828403121561134457600080fd5b5035919050565b80356001600160a01b038116811461136257600080fd5b919050565b6000806040838503121561137a57600080fd5b6113838361134b565b946020939093013593505050565b6000806000606084860312156113a657600080fd5b6113af8461134b565b92506113bd6020850161134b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561140c5761140c6113cd565b604052919050565b6000806040838503121561142757600080fd5b823567ffffffffffffffff8082111561143f57600080fd5b818501915085601f83011261145357600080fd5b8135602082821115611467576114676113cd565b8160051b92506114788184016113e3565b828152928401810192818101908985111561149257600080fd5b948201945b848610156114b7576114a88661134b565b82529482019490820190611497565b9997909101359750505050505050565b6000602082840312156114d957600080fd5b610fa18261134b565b600080604083850312156114f557600080fd5b6114fe8361134b565b91506020830135801515811461151357600080fd5b809150509250929050565b6000806000806080858703121561153457600080fd5b61153d8561134b565b9350602061154c81870161134b565b935060408601359250606086013567ffffffffffffffff8082111561157057600080fd5b818801915088601f83011261158457600080fd5b813581811115611596576115966113cd565b6115a8601f8201601f191685016113e3565b915080825289848285010111156115be57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080604083850312156115f157600080fd5b6115fa8361134b565b91506116086020840161134b565b90509250929050565b600181811c9082168061162557607f821691505b60208210810361164557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116d6576116d66116ae565b5060010190565b600083516116ef8184602088016112cf565b8351908301906117038183602088016112cf565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f8211156104b857600081815260208120601f850160051c810160208610156117785750805b601f850160051c820191505b8181101561179757828155600101611784565b505050505050565b815167ffffffffffffffff8111156117b9576117b96113cd565b6117cd816117c78454611611565b84611751565b602080601f83116001811461180257600084156117ea5750858301515b600019600386901b1c1916600185901b178555611797565b600085815260208120601f198616915b8281101561183157888601518255948401946001909101908401611812565b508582101561184f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b818103818111156102e4576102e46116ae565b808201808211156102e4576102e46116ae565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061190a908301846112f3565b9695505050505050565b60006020828403121561192657600080fd5b8151610fa18161129c56fea2646970667358221220510ccbb0bc552f98b6e62cfab932d366c95698f009777d3727204de19e4abb8164736f6c63430008110033a2646970667358221220a8b7884cbbedf4fae159f514c8745df174a66b921d9b2fd8db3d126bee5090f664736f6c6343000811003368747470733a2f2f646174612d736565642d7072656273632d312d73312e62696e616e63652e6f72673a3835343568747470733a2f2f6170692e617661782e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6d61696e6e65742e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692e696e667572612e696f2f76332f363737303435346263366561343263353861616331323937383533316239336668747470733a2f2f676f65726c692d726f6c6c75702e617262697472756d2e696f2f72706368747470733a2f2f6170692e617661782d746573742e6e6574776f726b2f6578742f62632f432f72706368747470733a2f2f6273632d6461746173656564312e62696e616e63652e6f7267",
    "sourceMap": "636:1487:29:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;650:14:4;:12;:14::i;:::-;620:44;;671::29;;;-1:-1:-1;;;;;;671:44:29;1671:64:0;671:44:29;;;636:1487;;;;;;;;;;;;5868:2125:4;6002:46;;;;;;;;;;;;;;;-1:-1:-1;;;6002:46:4;;;;;;6017:5;6002:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5981:18;;-1:-1:-1;;;216:20:30;;5909:7:4;;5981:9;;252:11:30;5981:18:4;;;;;;;;;;;;;:67;;:18;;:67;;:18;:67;:::i;:::-;-1:-1:-1;5981:67:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6081:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6081:48:4;;;;;;6098:5;6081:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6058:20;;-1:-1:-1;;;3197:22:30;;6081:48:4;;-1:-1:-1;6058:9:4;;3235:11:30;6058:20:4;;;;;;;;;;;;;:71;;:20;;:71;;:20;:71;:::i;:::-;-1:-1:-1;6058:71:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6162:84;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6162:84:4;;;;;;;6179:1;6162:84;;;;;;;;;;;;;;;;;;;;;;;6139:20;;-1:-1:-1;;;3459:22:30;;6139:9:4;;3506:1:30;3497:11;6139:20:4;;;;;;;;;;;;;:107;;:20;;:107;;:20;:107;:::i;:::-;-1:-1:-1;6139:107:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6278:82;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6278:82:4;;;;;;;6294:1;6278:82;;;;;;;;;;;;;;;;;;;;;;;6256:19;;-1:-1:-1;;;3721:21:30;;6256:9:4;;3767:1:30;3758:11;6256:19:4;;;;;;;;;;;;;:104;;:19;;:104;;:19;:104;:::i;:::-;-1:-1:-1;6256:104:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6393:53:4;;;;;;;;;;;;;;;-1:-1:-1;;;6393:53:4;;;;;;6410:8;6393:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6370:20;;-1:-1:-1;;;3982:22:30;;6393:53:4;;-1:-1:-1;6370:9:4;;4020:11:30;6370:20:4;;;;;;;;;;;;;:76;;:20;;:76;;:20;:76;:::i;:::-;-1:-1:-1;6370:76:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6480:52:4;;;;;;;;;;;;;;;-1:-1:-1;;;6480:52:4;;;;;;6498:2;6480:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:21;;-1:-1:-1;;;4244:23:30;;6480:52:4;;-1:-1:-1;6456:9:4;;4283:11:30;6456:21:4;;;;;;;;;;;;;:76;;:21;;:76;;:21;:76;:::i;:::-;-1:-1:-1;6456:76:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6573:59:4;;;;;;;;;;;;;;;-1:-1:-1;;;6573:59:4;;;;;;6598:3;6573:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6542:28;;-1:-1:-1;;;4507:30:30;;6573:59:4;;-1:-1:-1;6542:9:4;;4553:12:30;6542:28:4;;;;;;;;;;;;;:90;;:28;;:90;;:28;:90;:::i;:::-;-1:-1:-1;6542:90:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6670:60:4;;;;;;;;;;;;;;;-1:-1:-1;;;6670:60:4;;;;;;6692:5;6670:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6642:25;;-1:-1:-1;;;4778:27:30;;6670:60:4;;-1:-1:-1;6642:9:4;;4821:12:30;6642:25:4;;;;;;;;;;;;;:88;;:25;;:88;;:25;:88;:::i;:::-;-1:-1:-1;6642:88:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6775:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6804:6;6775:77;;;;;;;;;;;;;;;;;;;;;;;6740:32;;5058:21:30;5046:34;;6740:9:4;;5105:2:30;5096:12;6740:32:4;;;;;;;;;;;;;:112;;:32;;:112;;:32;:112;:::i;:::-;-1:-1:-1;6740:112:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6891:61:4;;;;;;;;;;;;;;;-1:-1:-1;;;6891:61:4;;;;;;6914:5;6891:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6862:26;;-1:-1:-1;;;5321:28:30;;6891:61:4;;-1:-1:-1;6862:9:4;;5365:12:30;6862:26:4;;;;;;;;;;;;;:90;;:26;;:90;;:26;:90;:::i;:::-;-1:-1:-1;6862:90:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6985:48:4;;;;;;;;;;;;;;;-1:-1:-1;;;6985:48:4;;;;;;7002:3;6985:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6962:20;;-1:-1:-1;;;5590:22:30;;6985:48:4;;-1:-1:-1;6962:9:4;;5628:11:30;6962:20:4;;;;;;;;;;;;;:71;;:20;;:71;;:20;:71;:::i;:::-;-1:-1:-1;6962:71:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7073:64:4;;;;;;;;;;;;;;;-1:-1:-1;;;7073:64:4;;;;;;7097:5;7073:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7043:27;;-1:-1:-1;;;5852:29:30;;7073:64:4;;-1:-1:-1;7043:9:4;;5897:12:30;7043:27:4;;;;;;;;;;;;;:94;;:27;;:94;;:27;:94;:::i;:::-;-1:-1:-1;7043:94:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7172:66;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7172:66:4;;;;;;;7191:5;7172:66;;;;;;;;;;;;;;;;;;;;;;;7147:22;;-1:-1:-1;;;6122:24:30;;7147:9:4;;6162:11:30;;7147:22:4;;;;;;;;;;;;;:91;;:22;;:91;;:22;:91;:::i;:::-;-1:-1:-1;7147:91:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7278:76;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7278:76:4;;;;;;;7302:5;7278:76;;;;;;;;;;;;;;;;;;;;;;;7248:27;;-1:-1:-1;;;6386:29:30;;7248:9:4;;6440:2:30;6431:12;7248:27:4;;;;;;;;;;;;;:106;;:27;;:106;;:27;:106;:::i;:::-;-1:-1:-1;7248:106:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7395:65;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7395:65:4;;;;;;;7420:2;7395:65;;;;;;;;;;;;;;;;;;;;;;;7364:28;;-1:-1:-1;;;6656:30:30;;7364:9:4;;6711:2:30;6702:12;7364:28:4;;;;;;;;;;;;;:96;;:28;;:96;;:28;:96;:::i;:::-;-1:-1:-1;7364:96:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7509:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7542:2;7509:86;;;;;;;;;;;;;;;;;;;;;;;7470:36;;6939:25:30;6927:38;;7470:9:4;;6990:2:30;6981:12;7470:36:4;;;;;;;;;;;;;:125;;:36;;:125;;:36;:125;:::i;:::-;-1:-1:-1;7470:125:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;7658:57:4;;;;;;;;;;;;;;;-1:-1:-1;;;7658:57:4;;;;;;7680:3;7658:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7630:25;;-1:-1:-1;;;7206:27:30;;7658:57:4;;-1:-1:-1;7630:9:4;;7249:12:30;7630:25:4;;;;;;;;;;;;;:85;;:25;;:85;;:25;:85;:::i;:::-;-1:-1:-1;7630:85:4;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7807:20;245:28;237:37;;-1:-1:-1;;;;;7830:16:4;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7830:18:4;;;;;;;;;;;;:::i;:::-;7807:41;;7863:9;7858:111;7882:4;:11;7878:1;:15;7858:111;;;7947:4;7952:1;7947:7;;;;;;;;:::i;:::-;;;;;;;:11;;;7914:9;7924:4;7929:1;7924:7;;;;;;;;:::i;:::-;;;;;;;:12;;;7914:23;;;;;;:::i;:::-;;;;;;;;;;;;;:30;;:44;;;;;;:::i;:::-;-1:-1:-1;7895:3:4;;;;:::i;:::-;;;;7858:111;;;;7985:1;7978:8;;;5868:2125;:::o;274:127:30:-;335:10;330:3;326:20;323:1;316:31;366:4;363:1;356:15;390:4;387:1;380:15;406:380;485:1;481:12;;;;528;;;549:61;;603:4;595:6;591:17;581:27;;549:61;656:2;648:6;645:14;625:18;622:38;619:161;;702:10;697:3;693:20;690:1;683:31;737:4;734:1;727:15;765:4;762:1;755:15;619:161;;406:380;;;:::o;917:545::-;1019:2;1014:3;1011:11;1008:448;;;1055:1;1080:5;1076:2;1069:17;1125:4;1121:2;1111:19;1195:2;1183:10;1179:19;1176:1;1172:27;1166:4;1162:38;1231:4;1219:10;1216:20;1213:47;;;-1:-1:-1;1254:4:30;1213:47;1309:2;1304:3;1300:12;1297:1;1293:20;1287:4;1283:31;1273:41;;1364:82;1382:2;1375:5;1372:13;1364:82;;;1427:17;;;1408:1;1397:13;1364:82;;;1368:3;;;1008:448;917:545;;;:::o;1638:1352::-;1758:10;;-1:-1:-1;;;;;1780:30:30;;1777:56;;;1813:18;;:::i;:::-;1842:97;1932:6;1892:38;1924:4;1918:11;1892:38;:::i;:::-;1886:4;1842:97;:::i;:::-;1994:4;;2058:2;2047:14;;2075:1;2070:663;;;;2777:1;2794:6;2791:89;;;-1:-1:-1;2846:19:30;;;2840:26;2791:89;-1:-1:-1;;1595:1:30;1591:11;;;1587:24;1583:29;1573:40;1619:1;1615:11;;;1570:57;2893:81;;2040:944;;2070:663;864:1;857:14;;;901:4;888:18;;-1:-1:-1;;2106:20:30;;;2224:236;2238:7;2235:1;2232:14;2224:236;;;2327:19;;;2321:26;2306:42;;2419:27;;;;2387:1;2375:14;;;;2254:19;;2224:236;;;2228:3;2488:6;2479:7;2476:19;2473:201;;;2549:19;;;2543:26;-1:-1:-1;;2632:1:30;2628:14;;;2644:3;2624:24;2620:37;2616:42;2601:58;2586:74;;2473:201;-1:-1:-1;;;;;2720:1:30;2704:14;;;2700:22;2687:36;;-1:-1:-1;1638:1352:30:o;7272:257::-;7344:4;7338:11;;;7376:17;;-1:-1:-1;;;;;7408:34:30;;7444:22;;;7405:62;7402:88;;;7470:18;;:::i;:::-;7506:4;7499:24;7272:257;:::o;7534:275::-;7605:2;7599:9;7670:2;7651:13;;-1:-1:-1;;7647:27:30;7635:40;;-1:-1:-1;;;;;7690:34:30;;7726:22;;;7687:62;7684:88;;;7752:18;;:::i;:::-;7788:2;7781:22;7534:275;;-1:-1:-1;7534:275:30:o;7814:250::-;7899:1;7909:113;7923:6;7920:1;7917:13;7909:113;;;7999:11;;;7993:18;7980:11;;;7973:39;7945:2;7938:10;7909:113;;;-1:-1:-1;;8056:1:30;8038:16;;8031:27;7814:250::o;8069:510::-;8123:5;8176:3;8169:4;8161:6;8157:17;8153:27;8143:55;;8194:1;8191;8184:12;8143:55;8217:13;;-1:-1:-1;;;;;8242:26:30;;8239:52;;;8271:18;;:::i;:::-;8315:55;8358:2;8339:13;;-1:-1:-1;;8335:27:30;8364:4;8331:38;8315:55;:::i;:::-;8395:2;8386:7;8379:19;8441:3;8434:4;8429:2;8421:6;8417:15;8413:26;8410:35;8407:55;;;8458:1;8455;8448:12;8407:55;8471:77;8545:2;8538:4;8529:7;8525:18;8518:4;8510:6;8506:17;8471:77;:::i;:::-;8566:7;8069:510;-1:-1:-1;;;;8069:510:30:o;8584:1909::-;8700:6;8731:2;8774;8762:9;8753:7;8749:23;8745:32;8742:52;;;8790:1;8787;8780:12;8742:52;8817:16;;-1:-1:-1;;;;;8882:14:30;;;8879:34;;;8909:1;8906;8899:12;8879:34;8947:6;8936:9;8932:22;8922:32;;8992:7;8985:4;8981:2;8977:13;8973:27;8963:55;;9014:1;9011;9004:12;8963:55;9043:2;9037:9;9065:2;9061;9058:10;9055:36;;;9071:18;;:::i;:::-;9117:2;9114:1;9110:10;9140:28;9164:2;9160;9156:11;9140:28;:::i;:::-;9202:15;;;9272:11;;;9268:20;;;9233:12;;;;9300:19;;;9297:39;;;9332:1;9329;9322:12;9297:39;9364:2;9360;9356:11;9345:22;;9376:1087;9392:6;9387:3;9384:15;9376:1087;;;9471:3;9465:10;9507:2;9494:11;9491:19;9488:109;;;9551:1;9580:2;9576;9569:14;9488:109;9620:20;;9663:4;9691:16;;;-1:-1:-1;;9687:30:30;9683:39;-1:-1:-1;9680:129:30;;;9763:1;9792:2;9788;9781:14;9680:129;9835:22;;:::i;:::-;9900:2;9896;9892:11;9886:18;9933:2;9923:8;9920:16;9917:109;;;9978:1;10008:3;10003;9996:16;9917:109;10053:65;10110:7;10105:2;10094:8;10090:2;10086:17;10082:26;10053:65;:::i;:::-;10039:80;;-1:-1:-1;10154:11:30;;;10148:18;;10182:16;;;10179:109;;;10240:1;10270:3;10265;10258:16;10179:109;10324:65;10381:7;10376:2;10365:8;10361:2;10357:17;10353:26;10324:65;:::i;:::-;10308:14;;;10301:89;10403:18;;-1:-1:-1;;9409:12:30;;;;10441;;;;9376:1087;;;10482:5;8584:1909;-1:-1:-1;;;;;;;;;8584:1909:30:o;10498:127::-;10559:10;10554:3;10550:20;10547:1;10540:31;10590:4;10587:1;10580:15;10614:4;10611:1;10604:15;10630:289;10761:3;10799:6;10793:13;10815:66;10874:6;10869:3;10862:4;10854:6;10850:17;10815:66;:::i;:::-;10897:16;;;;;10630:289;-1:-1:-1;;10630:289:30:o;10924:232::-;10963:3;10984:17;;;10981:140;;11043:10;11038:3;11034:20;11031:1;11024:31;11078:4;11075:1;11068:15;11106:4;11103:1;11096:15;10981:140;-1:-1:-1;11148:1:30;11137:13;;10924:232::o;:::-;636:1487:29;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000935760003560e01c8063ba414fa61162000062578063ba414fa614620000e9578063c482ef901462000104578063dbbfea1d1462000118578063fa7626d4146200012c57600080fd5b80630a9254e414620000985780633338f61d14620000a4578063464c8dac14620000ae5780638c0c5e3f14620000df575b600080fd5b620000a26200013a565b005b620000a262000487565b601354620000c2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b620000a26200053a565b620000f36200096b565b6040519015158152602001620000d6565b601254620000c2906001600160a01b031681565b601454620000c2906001600160a01b031681565b600754620000f39060ff1681565b604051620001489062000ce4565b604051809103906000f08015801562000165573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b0392909216919091179055604051620001949062000cf2565b604051809103906000f080158015620001b1573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b0392909216919091179055604051620001e09062000cf2565b604051809103906000f080158015620001fd573d6000803e3d6000fd5b50601480546001600160a01b0319166001600160a01b0392831617905560115460405163ca669fa760e01b81526001600482015291169063ca669fa790602401600060405180830381600087803b1580156200025857600080fd5b505af11580156200026d573d6000803e3d6000fd5b505060115460405163c88a5e6d60e01b815260016004820152671bc16d674ec8000060248201526001600160a01b03909116925063c88a5e6d9150604401600060405180830381600087803b158015620002c657600080fd5b505af1158015620002db573d6000803e3d6000fd5b50506013546040516354ba0f2760e01b8152600160048201526001600160a01b0390911692506354ba0f2791506024016020604051808303816000875af11580156200032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000351919062000d00565b506014546040516354ba0f2760e01b8152600160048201526001600160a01b03909116906354ba0f27906024016020604051808303816000875af11580156200039e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003c4919062000d00565b506012546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a16013546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a16014546040516001600160a01b0390911681527f7ae74c527414ae135fd97047b12921a5ec3911b804197855d67e25c7b75ee6f39060200160405180910390a1565b6013546040516370a0823160e01b81526001600482015262000503916001600160a01b0316906370a08231906024015b602060405180830381865afa158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb919062000d00565b600162000aa2565b6014546040516370a0823160e01b81526001600482015262000538916001600160a01b0316906370a0823190602401620004b7565b565b60115460405163ca669fa760e01b8152600160048201526001600160a01b039091169063ca669fa790602401600060405180830381600087803b1580156200058157600080fd5b505af115801562000596573d6000803e3d6000fd5b505060135460125460405163095ea7b360e01b81526001600160a01b039182166004820152600160248201529116925063095ea7b39150604401600060405180830381600087803b158015620005eb57600080fd5b505af115801562000600573d6000803e3d6000fd5b505060115460405163ca669fa760e01b8152600160048201526001600160a01b03909116925063ca669fa79150602401600060405180830381600087803b1580156200064b57600080fd5b505af115801562000660573d6000803e3d6000fd5b505060145460125460405163095ea7b360e01b81526001600160a01b039182166004820152600160248201529116925063095ea7b39150604401600060405180830381600087803b158015620006b557600080fd5b505af1158015620006ca573d6000803e3d6000fd5b505060115460405163ca669fa760e01b8152600160048201526001600160a01b03909116925063ca669fa79150602401600060405180830381600087803b1580156200071557600080fd5b505af11580156200072a573d6000803e3d6000fd5b5050601254601354601454604051631f48a98760e11b81526001600160a01b0392831660048201526001602482018190529183166044820152606481019190915291169250633e91530e9150608401600060405180830381600087803b1580156200079457600080fd5b505af1158015620007a9573d6000803e3d6000fd5b50506013546040516370a0823160e01b8152600160048201526200082b93506001600160a01b0390911691506370a08231906024015b602060405180830381865afa158015620007fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000823919062000d00565b600062000aa2565b6014546040516370a0823160e01b81526001600482015262000860916001600160a01b0316906370a0823190602401620007df565b6013546012546040805163044df8e760e41b815290516200090f936001600160a01b03908116936370a08231939116916344df8e70916004808201926020929091908290030181865afa158015620008bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008e2919062000d1a565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401620004b7565b6014546012546040805163044df8e760e41b8152905162000538936001600160a01b03908116936370a08231939116916344df8e70916004808201926020929091908290030181865afa158015620008bc573d6000803e3d6000fd5b600754600090610100900460ff16156200098e5750600754610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000a9d5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000a1f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162000d7e565b60408051601f198184030181529082905262000a3b9162000da4565b6000604051808303816000865af19150503d806000811462000a7a576040519150601f19603f3d011682016040523d82523d6000602084013e62000a7f565b606091505b509150508080602001905181019062000a99919062000db2565b9150505b919050565b80821462000bcd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000b159060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162000bcd62000bd1565b5050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000cd35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000c6e929160200162000d7e565b60408051601f198184030181529082905262000c8a9162000da4565b6000604051808303816000865af19150503d806000811462000cc9576040519150601f19603f3d011682016040523d82523d6000602084013e62000cce565b606091505b505050505b6007805461ff001916610100179055565b6102278062000dd783390190565b611bd08062000ffe83390190565b60006020828403121562000d1357600080fd5b5051919050565b60006020828403121562000d2d57600080fd5b81516001600160a01b038116811462000d4557600080fd5b9392505050565b6000815160005b8181101562000d6f576020818501810151868301520162000d53565b50600093019283525090919050565b6001600160e01b031983168152600062000d9c600483018462000d4c565b949350505050565b600062000d45828462000d4c565b60006020828403121562000dc557600080fd5b8151801515811462000d4557600080fdfe6080604052600080546001600160a01b03191661dead17905534801561002457600080fd5b506101f3806100346000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633e91530e1461003b57806344df8e7014610050575b600080fd5b61004e610049366004610179565b61007f565b005b600054610063906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546040516323b872dd60e01b81523360048201526001600160a01b03918216602482015260448101859052908516906323b872dd90606401600060405180830381600087803b1580156100d357600080fd5b505af11580156100e7573d6000803e3d6000fd5b50506000546040516323b872dd60e01b81523360048201526001600160a01b0391821660248201526044810185905290851692506323b872dd9150606401600060405180830381600087803b15801561013f57600080fd5b505af1158015610153573d6000803e3d6000fd5b5050505050505050565b80356001600160a01b038116811461017457600080fd5b919050565b6000806000806080858703121561018f57600080fd5b6101988561015d565b9350602085013592506101ad6040860161015d565b939692955092936060013592505056fea2646970667358221220df9061db1a3bc4c875e5f57076a55ce2e0963d9b06ea9f4d62db984883acc66064736f6c6343000811003360806040523480156200001157600080fd5b506040518060400160405280600781526020016611dd5b58985b1b60ca1b8152506040518060400160405280600481526020016323aaa6a160e11b81525081600090816200006091906200018d565b5060016200006f82826200018d565b5050506200008c620000866200009260201b60201c565b62000096565b62000259565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011357607f821691505b6020821081036200013457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018857600081815260208120601f850160051c81016020861015620001635750805b601f850160051c820191505b8181101562000184578281556001016200016f565b5050505b505050565b81516001600160401b03811115620001a957620001a9620000e8565b620001c181620001ba8454620000fe565b846200013a565b602080601f831160018114620001f95760008415620001e05750858301515b600019600386901b1c1916600185901b17855562000184565b600085815260208120601f198616915b828110156200022a5788860151825594840194600190910190840162000209565b5085821015620002495787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61196780620002696000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610239578063b88d4fde1461024c578063c87b56dd1461025f578063e985e9c514610272578063f2fde38b1461028557600080fd5b806370a0823114610205578063715018a6146102185780638da5cb5b1461022057806395d89b411461023157600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab5780634c8baca9146101be57806354ba0f27146101d15780636352211e146101f257600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e6101293660046112b2565b610298565b60405190151581526020015b60405180910390f35b61014b6102ea565b60405161013a919061131f565b61016b610166366004611332565b61037c565b6040516001600160a01b03909116815260200161013a565b610196610191366004611367565b6103a3565b005b6101966101a6366004611391565b6104bd565b6101966101b9366004611391565b6104ee565b6101966101cc366004611414565b610509565b6101e46101df3660046114c7565b610568565b60405190815260200161013a565b61016b610200366004611332565b6105b8565b6101e46102133660046114c7565b610618565b61019661069e565b6007546001600160a01b031661016b565b61014b6106b2565b6101966102473660046114e2565b6106c1565b61019661025a36600461151e565b6106d0565b61014b61026d366004611332565b610708565b61012e6102803660046115de565b610818565b6101966102933660046114c7565b610846565b60006001600160e01b031982166380ac58cd60e01b14806102c957506001600160e01b03198216635b5e139f60e01b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f990611611565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611611565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b6000610387826108bf565b506000908152600460205260409020546001600160a01b031690565b60006103ae826105b8565b9050806001600160a01b0316836001600160a01b0316036104205760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061043c575061043c8133610818565b6104ae5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610417565b6104b8838361091e565b505050565b6104c7338261098c565b6104e35760405162461bcd60e51b81526004016104179061164b565b6104b88383836109ea565b6104b8838383604051806020016040528060008152506106d0565b60005b82518110156104b85760005b828110156105555761054284838151811061053557610535611698565b6020026020010151610568565b508061054d816116c4565b915050610518565b5080610560816116c4565b91505061050c565b6000610578600880546001019055565b600061058360085490565b905061058f8382610b5b565b6102e481604051806040016040528060078152602001667465737455726960c81b815250610cf4565b6000818152600260205260408120546001600160a01b0316806102e45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610417565b60006001600160a01b0382166106825760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610417565b506001600160a01b031660009081526003602052604090205490565b6106a6610d87565b6106b06000610de1565b565b6060600180546102f990611611565b6106cc338383610e33565b5050565b6106da338361098c565b6106f65760405162461bcd60e51b81526004016104179061164b565b61070284848484610f01565b50505050565b6060610713826108bf565b6000828152600660205260408120805461072c90611611565b80601f016020809104026020016040519081016040528092919081815260200182805461075890611611565b80156107a55780601f1061077a576101008083540402835291602001916107a5565b820191906000526020600020905b81548152906001019060200180831161078857829003601f168201915b5050505050905060006107c360408051602081019091526000815290565b905080516000036107d5575092915050565b8151156108075780826040516020016107ef9291906116dd565b60405160208183030381529060405292505050919050565b61081084610f34565b949350505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61084e610d87565b6001600160a01b0381166108b35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610417565b6108bc81610de1565b50565b6000818152600260205260409020546001600160a01b03166108bc5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610417565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610953826105b8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610998836105b8565b9050806001600160a01b0316846001600160a01b031614806109bf57506109bf8185610818565b806108105750836001600160a01b03166109d88461037c565b6001600160a01b031614949350505050565b826001600160a01b03166109fd826105b8565b6001600160a01b031614610a235760405162461bcd60e51b81526004016104179061170c565b6001600160a01b038216610a855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610417565b610a928383836001610fa8565b826001600160a01b0316610aa5826105b8565b6001600160a01b031614610acb5760405162461bcd60e51b81526004016104179061170c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610bb15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610417565b6000818152600260205260409020546001600160a01b031615610c165760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610417565b610c24600083836001610fa8565b6000818152600260205260409020546001600160a01b031615610c895760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610417565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610d6f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610417565b60008281526006602052604090206104b8828261179f565b6007546001600160a01b031633146106b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610417565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e945760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610417565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f0c8484846109ea565b610f1884848484611030565b6107025760405162461bcd60e51b81526004016104179061185f565b6060610f3f826108bf565b6000610f5660408051602081019091526000815290565b90506000815111610f765760405180602001604052806000815250610fa1565b80610f8084611131565b604051602001610f919291906116dd565b6040516020818303038152906040525b9392505050565b6001811115610702576001600160a01b03841615610fee576001600160a01b03841660009081526003602052604081208054839290610fe89084906118b1565b90915550505b6001600160a01b03831615610702576001600160a01b038316600090815260036020526040812080548392906110259084906118c4565b909155505050505050565b60006001600160a01b0384163b1561112657604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906110749033908990889088906004016118d7565b6020604051808303816000875af19250505080156110af575060408051601f3d908101601f191682019092526110ac91810190611914565b60015b61110c573d8080156110dd576040519150601f19603f3d011682016040523d82523d6000602084013e6110e2565b606091505b5080516000036111045760405162461bcd60e51b81526004016104179061185f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610810565b506001949350505050565b6060600061113e836111c4565b600101905060008167ffffffffffffffff81111561115e5761115e6113cd565b6040519080825280601f01601f191660200182016040528015611188576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461119257509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106112035772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061122f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061124d57662386f26fc10000830492506010015b6305f5e1008310611265576305f5e100830492506008015b612710831061127957612710830492506004015b6064831061128b576064830492506002015b600a83106102e45760010192915050565b6001600160e01b0319811681146108bc57600080fd5b6000602082840312156112c457600080fd5b8135610fa18161129c565b60005b838110156112ea5781810151838201526020016112d2565b50506000910152565b6000815180845261130b8160208601602086016112cf565b601f01601f19169290920160200192915050565b602081526000610fa160208301846112f3565b60006020828403121561134457600080fd5b5035919050565b80356001600160a01b038116811461136257600080fd5b919050565b6000806040838503121561137a57600080fd5b6113838361134b565b946020939093013593505050565b6000806000606084860312156113a657600080fd5b6113af8461134b565b92506113bd6020850161134b565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561140c5761140c6113cd565b604052919050565b6000806040838503121561142757600080fd5b823567ffffffffffffffff8082111561143f57600080fd5b818501915085601f83011261145357600080fd5b8135602082821115611467576114676113cd565b8160051b92506114788184016113e3565b828152928401810192818101908985111561149257600080fd5b948201945b848610156114b7576114a88661134b565b82529482019490820190611497565b9997909101359750505050505050565b6000602082840312156114d957600080fd5b610fa18261134b565b600080604083850312156114f557600080fd5b6114fe8361134b565b91506020830135801515811461151357600080fd5b809150509250929050565b6000806000806080858703121561153457600080fd5b61153d8561134b565b9350602061154c81870161134b565b935060408601359250606086013567ffffffffffffffff8082111561157057600080fd5b818801915088601f83011261158457600080fd5b813581811115611596576115966113cd565b6115a8601f8201601f191685016113e3565b915080825289848285010111156115be57600080fd5b808484018584013760008482840101525080935050505092959194509250565b600080604083850312156115f157600080fd5b6115fa8361134b565b91506116086020840161134b565b90509250929050565b600181811c9082168061162557607f821691505b60208210810361164557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016116d6576116d66116ae565b5060010190565b600083516116ef8184602088016112cf565b8351908301906117038183602088016112cf565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f8211156104b857600081815260208120601f850160051c810160208610156117785750805b601f850160051c820191505b8181101561179757828155600101611784565b505050505050565b815167ffffffffffffffff8111156117b9576117b96113cd565b6117cd816117c78454611611565b84611751565b602080601f83116001811461180257600084156117ea5750858301515b600019600386901b1c1916600185901b178555611797565b600085815260208120601f198616915b8281101561183157888601518255948401946001909101908401611812565b508582101561184f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b818103818111156102e4576102e46116ae565b808201808211156102e4576102e46116ae565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061190a908301846112f3565b9695505050505050565b60006020828403121561192657600080fd5b8151610fa18161129c56fea2646970667358221220510ccbb0bc552f98b6e62cfab932d366c95698f009777d3727204de19e4abb8164736f6c63430008110033a2646970667358221220a8b7884cbbedf4fae159f514c8745df174a66b921d9b2fd8db3d126bee5090f664736f6c63430008110033",
    "sourceMap": "636:1487:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:452;;;:::i;:::-;;1278:159;;;:::i;749:29::-;;;;;-1:-1:-1;;;;;749:29:29;;;;;;-1:-1:-1;;;;;198:32:30;;;180:51;;168:2;153:18;749:29:29;;;;;;;;1443:542;;;:::i;1819:584:0:-;;;:::i;:::-;;;407:14:30;;400:22;382:41;;370:2;355:18;1819:584:0;242:187:30;721:22:29;;;;;-1:-1:-1;;;;;721:22:29;;;784:29;;;;;-1:-1:-1;;;;;784:29:29;;;1572:26:0;;;;;;;;;820:452:29;864:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;854:7:29;:23;;-1:-1:-1;;;;;;854:23:29;-1:-1:-1;;;;;854:23:29;;;;;;;;;;901:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;887:11:29;:30;;-1:-1:-1;;;;;;887:30:29;-1:-1:-1;;;;;887:30:29;;;;;;;;;;941:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;927:11:29;:30;;-1:-1:-1;;;;;;927:30:29;-1:-1:-1;;;;;927:30:29;;;;;;968:6;;:24;;-1:-1:-1;;;968:24:29;;-1:-1:-1;968:24:29;;;180:51:30;968:6:29;;;:12;;153:18:30;;968:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1002:6:29;;:32;;-1:-1:-1;;;1002:32:29;;:6;:32;;;1067:51:30;1026:7:29;1134:18:30;;;1127:34;-1:-1:-1;;;;;1002:6:29;;;;-1:-1:-1;1002:11:29;;-1:-1:-1;1040:18:30;;1002:32:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1044:11:29;;:31;;-1:-1:-1;;;1044:31:29;;:11;:31;;;180:51:30;-1:-1:-1;;;;;1044:11:29;;;;-1:-1:-1;1044:19:29;;-1:-1:-1;153:18:30;;1044:31:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1085:11:29;;:31;;-1:-1:-1;;;1085:31:29;;:11;:31;;;180:51:30;-1:-1:-1;;;;;1085:11:29;;;;:19;;153:18:30;;1085:31:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1151:7:29;;1131:29;;-1:-1:-1;;;;;1151:7:29;;;180:51:30;;1131:29:29;;168:2:30;153:18;1131:29:29;;;;;;;1195:11;;1175:33;;-1:-1:-1;;;;;1195:11:29;;;180:51:30;;1175:33:29;;168:2:30;153:18;1175:33:29;;;;;;;1243:11;;1223:33;;-1:-1:-1;;;;;1243:11:29;;;180:51:30;;1223:33:29;;168:2:30;153:18;1223:33:29;;;;;;;820:452::o;1278:159::-;1337:11;;:33;;-1:-1:-1;;;1337:33:29;;:11;:33;;;180:51:30;1328:46:29;;-1:-1:-1;;;;;1337:11:29;;:21;;153:18:30;;1337:33:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1372:1;1328:8;:46::i;:::-;1393:11;;:33;;-1:-1:-1;;;1393:33:29;;:11;:33;;;180:51:30;1384:46:29;;-1:-1:-1;;;;;1393:11:29;;:21;;153:18:30;;1393:33:29;14:223:30;1384:46:29;1278:159::o;1443:542::-;1481:6;;:24;;-1:-1:-1;;;1481:24:29;;:6;:24;;;180:51:30;-1:-1:-1;;;;;1481:6:29;;;;:12;;153:18:30;;1481:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:11:29;;1543:7;;1515:40;;-1:-1:-1;;;1515:40:29;;-1:-1:-1;;;;;1543:7:29;;;1515:40;;;1067:51:30;1515:11:29;1134:18:30;;;1127:34;1515:11:29;;;-1:-1:-1;1515:19:29;;-1:-1:-1;1040:18:30;;1515:40:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1565:6:29;;:24;;-1:-1:-1;;;1565:24:29;;:6;:24;;;180:51:30;-1:-1:-1;;;;;1565:6:29;;;;-1:-1:-1;1565:12:29;;-1:-1:-1;153:18:30;;1565:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1599:11:29;;1627:7;;1599:40;;-1:-1:-1;;;1599:40:29;;-1:-1:-1;;;;;1627:7:29;;;1599:40;;;1067:51:30;1599:11:29;1134:18:30;;;1127:34;1599:11:29;;;-1:-1:-1;1599:19:29;;-1:-1:-1;1040:18:30;;1599:40:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1649:6:29;;:24;;-1:-1:-1;;;1649:24:29;;:6;:24;;;180:51:30;-1:-1:-1;;;;;1649:6:29;;;;-1:-1:-1;1649:12:29;;-1:-1:-1;153:18:30;;1649:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1683:7:29;;1705:11;;1730;;1683:63;;-1:-1:-1;;;1683:63:29;;-1:-1:-1;;;;;1705:11:29;;;1683:63;;;1933:34:30;1683:7:29;1983:18:30;;;1976:34;;;1730:11:29;;;2026:18:30;;;2019:43;2078:18;;;2071:34;;;;1683:7:29;;;-1:-1:-1;1683:13:29;;-1:-1:-1;1867:19:30;;1683:63:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1765:11:29;;:33;;-1:-1:-1;;;1765:33:29;;:11;:33;;;180:51:30;1756:46:29;;-1:-1:-1;;;;;;1765:11:29;;;;-1:-1:-1;1765:21:29;;153:18:30;;1765:33:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1800:1;1756:8;:46::i;:::-;1821:11;;:33;;-1:-1:-1;;;1821:33:29;;:11;:33;;;180:51:30;1812:46:29;;-1:-1:-1;;;;;1821:11:29;;:21;;153:18:30;;1821:33:29;14:223:30;1812:46:29;1877:11;;1899:7;;:14;;;-1:-1:-1;;;1899:14:29;;;;1868:50;;-1:-1:-1;;;;;1877:11:29;;;;:21;;1899:7;;;:12;;:14;;;;;;;;;;;;;;;:7;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1877:37;;-1:-1:-1;;;;;;1877:37:29;;;;;;;-1:-1:-1;;;;;198:32:30;;;1877:37:29;;;180:51:30;153:18;;1877:37:29;14:223:30;1868:50:29;1937:11;;1959:7;;:14;;;-1:-1:-1;;;1959:14:29;;;;1928:50;;-1:-1:-1;;;;;1937:11:29;;;;:21;;1959:7;;;:12;;:14;;;;;;;;;;;;;;;:7;:14;;;;;;;;;;;;;;1819:584:0;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1067:51:30;;;-1:-1:-1;;;1134:18:30;;;1127:34;2196:43:0;;;;;;;;;1040:18:30;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;3978:2:30;3960:21;;;4017:2;3997:18;;;3990:30;4056:34;4051:2;4036:18;;4029:62;-1:-1:-1;;;4122:2:30;4107:18;;4100:32;4164:3;4149:19;;3776:398;5286:41:0;;;;;;;;5346:31;;;4391:21:30;;;4448:2;4428:18;;;4421:30;-1:-1:-1;;;4482:2:30;4467:18;;4460:40;4567:4;4552:20;;4545:36;;;5346:31:0;;;;;;;4532:3:30;5346:31:0;;;5396;;;4804:21:30;;;4861:2;4841:18;;;4834:30;-1:-1:-1;;;4895:2:30;4880:18;;4873:40;4980:4;4965:20;;4958:36;;;5396:31:0;;;;;;;4945:3:30;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;5207:51:30;;;-1:-1:-1;;;5274:18:30;;;5267:34;;;;2705:4:0;5317:18:30;;;5310:34;2482:11:0;;1671:64;2579:43;;5180:18:30;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;1172:184:30:-;1242:6;1295:2;1283:9;1274:7;1270:23;1266:32;1263:52;;;1311:1;1308;1301:12;1263:52;-1:-1:-1;1334:16:30;;1172:184;-1:-1:-1;1172:184:30:o;2116:290::-;2186:6;2239:2;2227:9;2218:7;2214:23;2210:32;2207:52;;;2255:1;2252;2245:12;2207:52;2281:16;;-1:-1:-1;;;;;2326:31:30;;2316:42;;2306:70;;2372:1;2369;2362:12;2306:70;2395:5;2116:290;-1:-1:-1;;;2116:290:30:o;2690:322::-;2731:3;2769:5;2763:12;2793:1;2803:128;2817:6;2814:1;2811:13;2803:128;;;2914:4;2899:13;;;2895:24;;2889:31;2876:11;;;2869:52;2832:12;2803:128;;;-1:-1:-1;2986:1:30;2950:16;;2975:13;;;-1:-1:-1;2950:16:30;;2690:322;-1:-1:-1;2690:322:30:o;3017:278::-;-1:-1:-1;;;;;;3202:33:30;;3190:46;;3172:3;3252:37;3286:1;3277:11;;3269:6;3252:37;:::i;:::-;3245:44;3017:278;-1:-1:-1;;;;3017:278:30:o;3300:189::-;3429:3;3454:29;3479:3;3471:6;3454:29;:::i;3494:277::-;3561:6;3614:2;3602:9;3593:7;3589:23;3585:32;3582:52;;;3630:1;3627;3620:12;3582:52;3662:9;3656:16;3715:5;3708:13;3701:21;3694:5;3691:32;3681:60;;3737:1;3734;3727:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "snacker()": "c482ef90",
    "testMinterA()": "464c8dac",
    "testMinterB()": "dbbfea1d",
    "testNftInitialization()": "3338f61d",
    "testSnack()": "8c0c5e3f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snacker\",\"outputs\":[{\"internalType\":\"contract Snacker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMinterA\",\"outputs\":[{\"internalType\":\"contract TestMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMinterB\",\"outputs\":[{\"internalType\":\"contract TestMinter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNftInitialization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSnack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Snacker.t.sol\":\"SnackerTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b\",\"dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e\",\"dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74\",\"dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69\",\"dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Snacker.sol\":{\"keccak256\":\"0xd43fd848e9251b03254ca4fe7ac0d34648a72300e4620b4a07f80eaa470e8182\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7645874f33598963bbe73405bb3ea39d10d56e4571bd770a250ba23a8c30402b\",\"dweb:/ipfs/QmbvFmjQZkYfswQFU2fpmscNap6YY56gw9QjYjTL5pwKaR\"]},\"src/TestMinter.sol\":{\"keccak256\":\"0xc1b9c3c2dc0252a305bf0032f711686d29c381ffd72c10937129081fb87cbd9f\",\"license\":\"BNSL 1.1\",\"urls\":[\"bzz-raw://48ebeebeb6f50c75cc42f860e8a0ebc1ecaeb9712f6558cf9769d636b92f3e74\",\"dweb:/ipfs/QmUag3eTRBK3FMBcucBBApw6CexvkPZN5ZxJWCXABvHXDK\"]},\"test/Snacker.t.sol\":{\"keccak256\":\"0x550702a4519561438853ceb25ec1b8e8ff0be0f0ca3a6a7b2c1b9706e6716cbb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2ae5a75815ea8bfce77e4b81c73f2332f6ed3193fefdc6dcfa5b7a007fd29cd4\",\"dweb:/ipfs/QmP7xegphN16oy6bsa61dRoAHhHL47pyNZfyyHWyc4rEv6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "snacker",
          "outputs": [
            {
              "internalType": "contract Snacker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testMinterA",
          "outputs": [
            {
              "internalType": "contract TestMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testMinterB",
          "outputs": [
            {
              "internalType": "contract TestMinter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testNftInitialization"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSnack"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Snacker.t.sol": "SnackerTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x3ed7f49e907eaf339c3bb0b79a81d303d0f9e37aa5b8a9854c0cbfc3ad9a3ef0",
        "urls": [
          "bzz-raw://01c2532fb5fea32c6dc165518f2c4918af25d9139d17c11da330414c9797a70b",
          "dweb:/ipfs/QmV4r8a1e9Rgu2xoigVCuSv3fZ737wD2DXbV6ZmHXVUtDn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf0c5c17c4cdfd0de659cf5e58e0e1611b6ee53900d3ab8b07b871d71d0b37bc6",
        "urls": [
          "bzz-raw://21ffda3891e7480d5fdbf7f5e9d539f0ed76204bca69738f8ee006395ef1e23e",
          "dweb:/ipfs/Qmbhbn8zVXrCyvhvoQ5AUSj3usVGqMbMSEHYkNPdbQKBxt"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6dc670615c9d04adf786ed4f18095b2142311c93dfda6459732da919d9113c17",
        "urls": [
          "bzz-raw://b4eb56f37ea1c9bb72d2064b5e8fd134dd871dd0a9a3e081995c0fa52dd82c74",
          "dweb:/ipfs/QmbQZeD1RfPWjUSZ8iEdUYoLBn1PuSHvSYzZ7V9rLrRK4T"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7",
        "urls": [
          "bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69",
          "dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038",
        "urls": [
          "bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691",
          "dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Snacker.sol": {
        "keccak256": "0xd43fd848e9251b03254ca4fe7ac0d34648a72300e4620b4a07f80eaa470e8182",
        "urls": [
          "bzz-raw://7645874f33598963bbe73405bb3ea39d10d56e4571bd770a250ba23a8c30402b",
          "dweb:/ipfs/QmbvFmjQZkYfswQFU2fpmscNap6YY56gw9QjYjTL5pwKaR"
        ],
        "license": "UNLICENSED"
      },
      "src/TestMinter.sol": {
        "keccak256": "0xc1b9c3c2dc0252a305bf0032f711686d29c381ffd72c10937129081fb87cbd9f",
        "urls": [
          "bzz-raw://48ebeebeb6f50c75cc42f860e8a0ebc1ecaeb9712f6558cf9769d636b92f3e74",
          "dweb:/ipfs/QmUag3eTRBK3FMBcucBBApw6CexvkPZN5ZxJWCXABvHXDK"
        ],
        "license": "BNSL 1.1"
      },
      "test/Snacker.t.sol": {
        "keccak256": "0x550702a4519561438853ceb25ec1b8e8ff0be0f0ca3a6a7b2c1b9706e6716cbb",
        "urls": [
          "bzz-raw://2ae5a75815ea8bfce77e4b81c73f2332f6ed3193fefdc6dcfa5b7a007fd29cd4",
          "dweb:/ipfs/QmP7xegphN16oy6bsa61dRoAHhHL47pyNZfyyHWyc4rEv6"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Snacker.t.sol",
    "id": 27907,
    "exportedSymbols": {
      "Address": [
        26333
      ],
      "CheatCodes": [
        27671
      ],
      "CommonBase": [
        1818
      ],
      "Context": [
        26355
      ],
      "Counters": [
        26429
      ],
      "DSTest": [
        1786
      ],
      "ERC165": [
        26628
      ],
      "ERC721": [
        25717
      ],
      "ERC721URIStorage": [
        25976
      ],
      "IERC165": [
        26640
      ],
      "IERC721": [
        25833
      ],
      "IERC721Metadata": [
        26003
      ],
      "IERC721Receiver": [
        25851
      ],
      "Math": [
        27505
      ],
      "Ownable": [
        24772
      ],
      "Snacker": [
        27544
      ],
      "SnackerTest": [
        27906
      ],
      "StdAssertions": [
        2644
      ],
      "StdCheats": [
        4757
      ],
      "StdStorage": [
        5662
      ],
      "StdUtils": [
        7525
      ],
      "Strings": [
        26604
      ],
      "Test": [
        7556
      ],
      "TestBase": [
        7545
      ],
      "TestMinter": [
        27641
      ],
      "Vm": [
        8530
      ],
      "console": [
        16594
      ],
      "console2": [
        24659
      ],
      "stdError": [
        4823
      ],
      "stdJson": [
        5489
      ],
      "stdMath": [
        5631
      ],
      "stdStorage": [
        7096
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2085:29",
    "nodes": [
      {
        "id": 27643,
        "nodeType": "PragmaDirective",
        "src": "39:24:29",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 27644,
        "nodeType": "ImportDirective",
        "src": "65:28:29",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27907,
        "sourceUnit": 7557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27645,
        "nodeType": "ImportDirective",
        "src": "94:28:29",
        "nodes": [],
        "absolutePath": "src/Snacker.sol",
        "file": "../src/Snacker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27907,
        "sourceUnit": 27545,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27646,
        "nodeType": "ImportDirective",
        "src": "123:31:29",
        "nodes": [],
        "absolutePath": "src/TestMinter.sol",
        "file": "../src/TestMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 27907,
        "sourceUnit": 27642,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 27671,
        "nodeType": "ContractDefinition",
        "src": "156:477:29",
        "nodes": [
          {
            "id": 27653,
            "nodeType": "FunctionDefinition",
            "src": "183:42:29",
            "nodes": [],
            "functionSelector": "47e50cce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "prank",
            "nameLocation": "192:5:29",
            "parameters": {
              "id": 27651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27648,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27653,
                  "src": "198:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27653,
                  "src": "207:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "207:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "197:18:29"
            },
            "returnParameters": {
              "id": 27652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:0:29"
            },
            "scope": 27671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27658,
            "nodeType": "FunctionDefinition",
            "src": "338:33:29",
            "nodes": [],
            "functionSelector": "ca669fa7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "prank",
            "nameLocation": "347:5:29",
            "parameters": {
              "id": 27656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27655,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27658,
                  "src": "353:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:9:29"
            },
            "returnParameters": {
              "id": 27657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:29"
            },
            "scope": 27671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27663,
            "nodeType": "FunctionDefinition",
            "src": "442:31:29",
            "nodes": [],
            "functionSelector": "4c63e562",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assume",
            "nameLocation": "451:6:29",
            "parameters": {
              "id": 27661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27663,
                  "src": "458:4:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:6:29"
            },
            "returnParameters": {
              "id": 27662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:0:29"
            },
            "scope": 27671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 27670,
            "nodeType": "FunctionDefinition",
            "src": "543:56:29",
            "nodes": [],
            "functionSelector": "c88a5e6d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deal",
            "nameLocation": "552:4:29",
            "parameters": {
              "id": 27668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27665,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "565:3:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 27670,
                  "src": "557:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27667,
                  "mutability": "mutable",
                  "name": "newBalance",
                  "nameLocation": "578:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 27670,
                  "src": "570:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 27666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:33:29"
            },
            "returnParameters": {
              "id": 27669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "598:0:29"
            },
            "scope": 27671,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheatCodes",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          27671
        ],
        "name": "CheatCodes",
        "nameLocation": "166:10:29",
        "scope": 27907,
        "usedErrors": []
      },
      {
        "id": 27906,
        "nodeType": "ContractDefinition",
        "src": "636:1487:29",
        "nodes": [
          {
            "id": 27679,
            "nodeType": "VariableDeclaration",
            "src": "671:44:29",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "cheats",
            "nameLocation": "682:6:29",
            "scope": 27906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CheatCodes_$27671",
              "typeString": "contract CheatCodes"
            },
            "typeName": {
              "id": 27675,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27674,
                "name": "CheatCodes",
                "nameLocations": [
                  "671:10:29"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27671,
                "src": "671:10:29"
              },
              "referencedDeclaration": 27671,
              "src": "671:10:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$27671",
                "typeString": "contract CheatCodes"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 27677,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 107,
                  "src": "702:12:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 27676,
                "name": "CheatCodes",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 27671,
                "src": "691:10:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_CheatCodes_$27671_$",
                  "typeString": "type(contract CheatCodes)"
                }
              },
              "id": 27678,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "691:24:29",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CheatCodes_$27671",
                "typeString": "contract CheatCodes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 27682,
            "nodeType": "VariableDeclaration",
            "src": "721:22:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "c482ef90",
            "mutability": "mutable",
            "name": "snacker",
            "nameLocation": "736:7:29",
            "scope": 27906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Snacker_$27544",
              "typeString": "contract Snacker"
            },
            "typeName": {
              "id": 27681,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27680,
                "name": "Snacker",
                "nameLocations": [
                  "721:7:29"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27544,
                "src": "721:7:29"
              },
              "referencedDeclaration": 27544,
              "src": "721:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Snacker_$27544",
                "typeString": "contract Snacker"
              }
            },
            "visibility": "public"
          },
          {
            "id": 27685,
            "nodeType": "VariableDeclaration",
            "src": "749:29:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "464c8dac",
            "mutability": "mutable",
            "name": "testMinterA",
            "nameLocation": "767:11:29",
            "scope": 27906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMinter_$27641",
              "typeString": "contract TestMinter"
            },
            "typeName": {
              "id": 27684,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27683,
                "name": "TestMinter",
                "nameLocations": [
                  "749:10:29"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27641,
                "src": "749:10:29"
              },
              "referencedDeclaration": 27641,
              "src": "749:10:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMinter_$27641",
                "typeString": "contract TestMinter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 27688,
            "nodeType": "VariableDeclaration",
            "src": "784:29:29",
            "nodes": [],
            "constant": false,
            "functionSelector": "dbbfea1d",
            "mutability": "mutable",
            "name": "testMinterB",
            "nameLocation": "802:11:29",
            "scope": 27906,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestMinter_$27641",
              "typeString": "contract TestMinter"
            },
            "typeName": {
              "id": 27687,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 27686,
                "name": "TestMinter",
                "nameLocations": [
                  "784:10:29"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27641,
                "src": "784:10:29"
              },
              "referencedDeclaration": 27641,
              "src": "784:10:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestMinter_$27641",
                "typeString": "contract TestMinter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 27771,
            "nodeType": "FunctionDefinition",
            "src": "820:452:29",
            "nodes": [],
            "body": {
              "id": 27770,
              "nodeType": "Block",
              "src": "844:428:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 27696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27691,
                      "name": "snacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27682,
                      "src": "854:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Snacker_$27544",
                        "typeString": "contract Snacker"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "864:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Snacker_$27544_$",
                          "typeString": "function () returns (contract Snacker)"
                        },
                        "typeName": {
                          "id": 27693,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 27692,
                            "name": "Snacker",
                            "nameLocations": [
                              "868:7:29"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27544,
                            "src": "868:7:29"
                          },
                          "referencedDeclaration": 27544,
                          "src": "868:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Snacker_$27544",
                            "typeString": "contract Snacker"
                          }
                        }
                      },
                      "id": 27695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "864:13:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Snacker_$27544",
                        "typeString": "contract Snacker"
                      }
                    },
                    "src": "854:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Snacker_$27544",
                      "typeString": "contract Snacker"
                    }
                  },
                  "id": 27697,
                  "nodeType": "ExpressionStatement",
                  "src": "854:23:29"
                },
                {
                  "expression": {
                    "id": 27703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27698,
                      "name": "testMinterA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27685,
                      "src": "887:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMinter_$27641",
                        "typeString": "contract TestMinter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "901:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestMinter_$27641_$",
                          "typeString": "function () returns (contract TestMinter)"
                        },
                        "typeName": {
                          "id": 27700,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 27699,
                            "name": "TestMinter",
                            "nameLocations": [
                              "905:10:29"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27641,
                            "src": "905:10:29"
                          },
                          "referencedDeclaration": 27641,
                          "src": "905:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMinter_$27641",
                            "typeString": "contract TestMinter"
                          }
                        }
                      },
                      "id": 27702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "901:16:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMinter_$27641",
                        "typeString": "contract TestMinter"
                      }
                    },
                    "src": "887:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMinter_$27641",
                      "typeString": "contract TestMinter"
                    }
                  },
                  "id": 27704,
                  "nodeType": "ExpressionStatement",
                  "src": "887:30:29"
                },
                {
                  "expression": {
                    "id": 27710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 27705,
                      "name": "testMinterB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27688,
                      "src": "927:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMinter_$27641",
                        "typeString": "contract TestMinter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 27708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "941:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestMinter_$27641_$",
                          "typeString": "function () returns (contract TestMinter)"
                        },
                        "typeName": {
                          "id": 27707,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 27706,
                            "name": "TestMinter",
                            "nameLocations": [
                              "945:10:29"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 27641,
                            "src": "945:10:29"
                          },
                          "referencedDeclaration": 27641,
                          "src": "945:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestMinter_$27641",
                            "typeString": "contract TestMinter"
                          }
                        }
                      },
                      "id": 27709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "941:16:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestMinter_$27641",
                        "typeString": "contract TestMinter"
                      }
                    },
                    "src": "927:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestMinter_$27641",
                      "typeString": "contract TestMinter"
                    }
                  },
                  "id": 27711,
                  "nodeType": "ExpressionStatement",
                  "src": "927:30:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "989:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "981:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27715,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "981:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27712,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27679,
                        "src": "968:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$27671",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 27714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "975:5:29",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27658,
                      "src": "968:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27720,
                  "nodeType": "ExpressionStatement",
                  "src": "968:24:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1022:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1014:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27724,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1014:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1014:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 27728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1026:7:29",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 27721,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27679,
                        "src": "1002:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$27671",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 27723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1009:4:29",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27670,
                      "src": "1002:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 27729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:32:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27730,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:32:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1072:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1064:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1064:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1064:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27731,
                        "name": "testMinterA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27685,
                        "src": "1044:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMinter_$27641",
                          "typeString": "contract TestMinter"
                        }
                      },
                      "id": 27733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1056:7:29",
                      "memberName": "mintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27600,
                      "src": "1044:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 27738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1044:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27739,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:31:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1113:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1105:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27743,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1105:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1105:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27740,
                        "name": "testMinterB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27688,
                        "src": "1085:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMinter_$27641",
                          "typeString": "contract TestMinter"
                        }
                      },
                      "id": 27742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1097:7:29",
                      "memberName": "mintNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27600,
                      "src": "1085:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 27747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:31:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27748,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:31:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27752,
                            "name": "snacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27682,
                            "src": "1151:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Snacker_$27544",
                              "typeString": "contract Snacker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Snacker_$27544",
                              "typeString": "contract Snacker"
                            }
                          ],
                          "id": 27751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1143:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1143:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1143:16:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27749,
                      "name": "log_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1131:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1131:29:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27755,
                  "nodeType": "EmitStatement",
                  "src": "1126:34:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27759,
                            "name": "testMinterA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27685,
                            "src": "1195:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          ],
                          "id": 27758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1187:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1187:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1187:20:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27756,
                      "name": "log_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1175:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1175:33:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27762,
                  "nodeType": "EmitStatement",
                  "src": "1170:38:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27766,
                            "name": "testMinterB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27688,
                            "src": "1243:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          ],
                          "id": 27765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1235:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27764,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1235:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1235:20:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 27763,
                      "name": "log_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "1223:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 27768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:33:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27769,
                  "nodeType": "EmitStatement",
                  "src": "1218:38:29"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "829:5:29",
            "parameters": {
              "id": 27689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "834:2:29"
            },
            "returnParameters": {
              "id": 27690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "844:0:29"
            },
            "scope": 27906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27797,
            "nodeType": "FunctionDefinition",
            "src": "1278:159:29",
            "nodes": [],
            "body": {
              "id": 27796,
              "nodeType": "Block",
              "src": "1318:119:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 27779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1367:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 27778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1359:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27777,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1359:7:29",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1359:10:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27775,
                            "name": "testMinterA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27685,
                            "src": "1337:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          },
                          "id": 27776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1349:9:29",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24890,
                          "src": "1337:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1337:33:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1372:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27774,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1328:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:46:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27784,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:46:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 27790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1423:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 27789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1415:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27788,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1415:7:29",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1415:10:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27786,
                            "name": "testMinterB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27688,
                            "src": "1393:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          },
                          "id": 27787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1405:9:29",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24890,
                          "src": "1393:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1393:33:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1428:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27785,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1384:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:46:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27795,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:46:29"
                }
              ]
            },
            "functionSelector": "3338f61d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testNftInitialization",
            "nameLocation": "1287:21:29",
            "parameters": {
              "id": 27772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1308:2:29"
            },
            "returnParameters": {
              "id": 27773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:29"
            },
            "scope": 27906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 27905,
            "nodeType": "FunctionDefinition",
            "src": "1443:542:29",
            "nodes": [],
            "body": {
              "id": 27904,
              "nodeType": "Block",
              "src": "1471:514:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1502:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1494:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1494:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1494:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27800,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27679,
                        "src": "1481:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$27671",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 27802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1488:5:29",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27658,
                      "src": "1481:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1481:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27808,
                  "nodeType": "ExpressionStatement",
                  "src": "1481:24:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27814,
                            "name": "snacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27682,
                            "src": "1543:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Snacker_$27544",
                              "typeString": "contract Snacker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Snacker_$27544",
                              "typeString": "contract Snacker"
                            }
                          ],
                          "id": 27813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1535:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27812,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1535:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1535:16:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1553:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 27809,
                        "name": "testMinterA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27685,
                        "src": "1515:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMinter_$27641",
                          "typeString": "contract TestMinter"
                        }
                      },
                      "id": 27811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1527:7:29",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25029,
                      "src": "1515:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 27817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1515:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27818,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1586:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1578:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1578:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1578:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27819,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27679,
                        "src": "1565:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$27671",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 27821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1572:5:29",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27658,
                      "src": "1565:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27827,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:24:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27833,
                            "name": "snacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27682,
                            "src": "1627:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Snacker_$27544",
                              "typeString": "contract Snacker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Snacker_$27544",
                              "typeString": "contract Snacker"
                            }
                          ],
                          "id": 27832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1619:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1619:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1619:16:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1637:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 27828,
                        "name": "testMinterB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27688,
                        "src": "1599:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestMinter_$27641",
                          "typeString": "contract TestMinter"
                        }
                      },
                      "id": 27830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1611:7:29",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25029,
                      "src": "1599:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 27836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1599:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27837,
                  "nodeType": "ExpressionStatement",
                  "src": "1599:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 27843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1670:1:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 27842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1662:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1662:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1662:10:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 27838,
                        "name": "cheats",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27679,
                        "src": "1649:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CheatCodes_$27671",
                          "typeString": "contract CheatCodes"
                        }
                      },
                      "id": 27840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1656:5:29",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27658,
                      "src": "1649:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 27845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:24:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27846,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:24:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 27852,
                            "name": "testMinterA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27685,
                            "src": "1705:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          ],
                          "id": 27851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1697:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1697:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1697:20:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1719:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 27857,
                            "name": "testMinterB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27688,
                            "src": "1730:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          ],
                          "id": 27856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1722:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 27855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1722:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 27858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1722:20:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1744:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 27847,
                        "name": "snacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27682,
                        "src": "1683:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Snacker_$27544",
                          "typeString": "contract Snacker"
                        }
                      },
                      "id": 27849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1691:5:29",
                      "memberName": "Snack",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27543,
                      "src": "1683:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,address,uint256) external"
                      }
                    },
                    "id": 27860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:63:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27861,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:63:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 27867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1795:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 27866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1787:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27865,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1787:7:29",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1787:10:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27863,
                            "name": "testMinterA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27685,
                            "src": "1765:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          },
                          "id": 27864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1777:9:29",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24890,
                          "src": "1765:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1765:33:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1800:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 27862,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1756:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:46:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27872,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:46:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 27878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1851:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 27877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1843:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 27876,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1843:7:29",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 27879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1843:10:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27874,
                            "name": "testMinterB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27688,
                            "src": "1821:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          },
                          "id": 27875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1833:9:29",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24890,
                          "src": "1821:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1821:33:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 27881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1856:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 27873,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1812:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1812:46:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27883,
                  "nodeType": "ExpressionStatement",
                  "src": "1812:46:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 27887,
                                "name": "snacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27682,
                                "src": "1899:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Snacker_$27544",
                                  "typeString": "contract Snacker"
                                }
                              },
                              "id": 27888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1907:4:29",
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27511,
                              "src": "1899:12:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 27889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1899:14:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27885,
                            "name": "testMinterA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27685,
                            "src": "1877:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          },
                          "id": 27886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1889:9:29",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24890,
                          "src": "1877:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1877:37:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1916:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27884,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1868:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:50:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27893,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:50:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 27897,
                                "name": "snacker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27682,
                                "src": "1959:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Snacker_$27544",
                                  "typeString": "contract Snacker"
                                }
                              },
                              "id": 27898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1967:4:29",
                              "memberName": "burn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 27511,
                              "src": "1959:12:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 27899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1959:14:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 27895,
                            "name": "testMinterB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27688,
                            "src": "1937:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestMinter_$27641",
                              "typeString": "contract TestMinter"
                            }
                          },
                          "id": 27896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1949:9:29",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24890,
                          "src": "1937:21:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 27900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1937:37:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 27901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1976:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 27894,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1947,
                        1972,
                        1985,
                        2001,
                        2043,
                        2085,
                        2127,
                        2164,
                        2201,
                        2238,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1928:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 27902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:50:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27903,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:50:29"
                }
              ]
            },
            "functionSelector": "8c0c5e3f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSnack",
            "nameLocation": "1452:9:29",
            "parameters": {
              "id": 27798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1461:2:29"
            },
            "returnParameters": {
              "id": 27799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1471:0:29"
            },
            "scope": 27906,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 27672,
              "name": "Test",
              "nameLocations": [
                "660:4:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7556,
              "src": "660:4:29"
            },
            "id": 27673,
            "nodeType": "InheritanceSpecifier",
            "src": "660:4:29"
          }
        ],
        "canonicalName": "SnackerTest",
        "contractDependencies": [
          27544,
          27641
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          27906,
          7556,
          7525,
          4757,
          4368,
          2644,
          1786,
          7545,
          1818
        ],
        "name": "SnackerTest",
        "nameLocation": "645:11:29",
        "scope": 27907,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 29
}